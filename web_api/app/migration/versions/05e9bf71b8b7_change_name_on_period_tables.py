"""Change name on period tables

Revision ID: 05e9bf71b8b7
Revises: 19fdd907fd45
Create Date: 2023-12-28 16:58:10.264960

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "05e9bf71b8b7"
down_revision: Union[str, None] = "19fdd907fd45"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unavailable_period",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("service_id", sa.Uuid(), nullable=False),
        sa.Column("start_datetime", sa.DateTime(), nullable=False),
        sa.Column("end_datetime", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "working_hour",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("service_id", sa.Uuid(), nullable=False),
        sa.Column("day_of_week", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["service.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("working_hours")
    op.drop_table("unavailable_periods")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unavailable_periods",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "start_datetime",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "end_datetime", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="unavailable_periods_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="unavailable_periods_pkey"),
    )
    op.create_table(
        "working_hours",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("service_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("day_of_week", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "start_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "end_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["service_id"], ["service.id"], name="working_hours_service_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="working_hours_pkey"),
    )
    op.drop_table("working_hour")
    op.drop_table("unavailable_period")
    # ### end Alembic commands ###
