version: "3"

services:
  web_api:
    build:
      context: ./web_api
      dockerfile: Dockerfile.local-dev
    image: chengtze/timelink-web_api:0.0.1-local-dev
    container_name: web_api
    ports:
      - "8000:8000"
    volumes:
      - ./logs/web_api:/usr/src/app/logs
    env_file:
      - ./web_api/.env
    restart: unless-stopped
    depends_on:
      - db
  bot-server:
    build:
      context: ./bot-server
      dockerfile: Dockerfile
    image: chengtze/timelink-bot-server:0.0.1-local-dev
    container_name: bot-server
    ports:
      - "8800:8000"
    env_file:
      - ./bot-server/.env
    restart: unless-stopped
    depends_on:
      - web_api
  # liff-server:
  #   build:
  #     context: ./liff-server
  #     dockerfile: Dockerfile
  #   image: chengtze/timelink-liff-server:0.0.1-local-dev
  #   container_name: liff-server
  #   ports:
  #     - "8801:3000"
  #   env_file:
  #     - ./liff-server/.env
  #   restart: unless-stopped
  #   depends_on:
  #     - web_api
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    image: chengtze/timelink-db:0.0.1-local-dev
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./logs/db:/var/log/postgresql
    restart: unless-stopped

networks:
  default:
    name: timelink_net
    driver: bridge
